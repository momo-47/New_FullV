  <arg name="model"/>
  <arg name="urdf_file" textfile="$(find New_FullV)/urdf/New_FullV.urdf" />
  <param name="robot_description" command="$(arg urdf_file)" />
  
  
    <!-- SLAM: Gmapping, Cartographer, Hector, Karto, Frontier_exploration, RTAB-Map -->
  <include file="$(find turtlebot3_slam)/launch/turtlebot3_$(arg slam_methods).launch">
    <arg name="model" value="$(arg model)"/>
    <arg name="configuration_basename" value="$(arg configuration_basename)"/>
  </include>
  
  
  
  
  <gazebo reference="Kinect">
  <sensor name="Kinect_camera" type="depth">
    <update_rate>20</update_rate>
    <always_on>1</always_on>
    <visualize>true</visualize>
    <camera>
      <horizontal_fov>1.047198</horizontal_fov>
      <image>
        <width>640</width>
        <height>480</height>
        <format>R8G8B8</format>
      </image>
      <clip>
        <near>0.05</near>
        <far>3</far>
      </clip>
    </camera>
    <plugin name="Kinect_controller" filename="libgazebo_ros_openni_kinect.so">
      <baseline>0.2</baseline>
      <alwaysOn>true</alwaysOn>
      <updateRate>0.0</updateRate>
      <cameraName>Kinect_camera</cameraName>
      <imageTopicName>/camera/color/image_raw</imageTopicName>
      <cameraInfoTopicName>/camera/color/camera_info</cameraInfoTopicName>
      <depthImageTopicName>/camera/depth/image_raw</depthImageTopicName>
      <depthImageInfoTopicName>/camera/depth/camera_info</depthImageInfoTopicName>
      <pointCloudTopicName>/camera/depth/points</pointCloudTopicName>
      <frameName>Kinect</frameName>
      <pointCloudCutoff>0.5</pointCloudCutoff>
      <pointCloudCutoffMax>3.0</pointCloudCutoffMax>
      <distortionK1>0.00000001</distortionK1>
      <distortionK2>0.00000001</distortionK2>
      <distortionK3>0.00000001</distortionK3>
      <distortionT1>0.00000001</distortionT1>
      <distortionT2>0.00000001</distortionT2>
      <CxPrime>0</CxPrime>
      <Cx>0</Cx>
      <Cy>0</Cy>
      <focalLength>0</focalLength>
      <hackBaseline>0</hackBaseline>
    </plugin>
  </sensor>
</gazebo>






    <gazebo reference="kinect">
        <sensor name="kinect_camera" type="depth">
            <!-- openni plugin has the x pointing towards the scene, so rotate to have z -->
            <pose frame="kinect">0.0 0.0 1.0 0.0 -1.5708 1.5708</pose>
            <camera>
                <horizontal_fov>0.74839718</horizontal_fov>
                <image>
                    <width>1280</width>
                    <height>1024</height>
                    <format>L_INT8</format>
                </image>
                <clip>
                    <near>0.1</near>
                    <far>10.0</far>
                </clip>
                <noise>
                    <type>gaussian</type>
                    <mean>0.5</mean>
                    <stddev>1.0</stddev>
                </noise>
            </camera>
            <plugin name="kinect_plugin" filename="libgazebo_ros_openni_kinect.so">
                <baseline>0.1</baseline>
                <alwaysOn>true</alwaysOn>
                <!-- Keep this zero, update_rate in the parent <sensor> tag
                will control the frame rate. -->
                <updateRate>0.0</updateRate>
                <cameraName>kinect_camera</cameraName>
                <imageTopicName>/3d_image/image_raw</imageTopicName>
                <cameraInfoTopicName>/3d_image/camera_info</cameraInfoTopicName>
                <depthImageTopicName>/3d_image/image_raw_depth</depthImageTopicName>
                <depthImageInfoTopicName>/3d_image/camera_info</depthImageInfoTopicName>
                <pointCloudTopicName>/3d_image/3d_cloud</pointCloudTopicName>
                <frameName>kinect</frameName>
                <pointCloudCutoff>0.5</pointCloudCutoff>
                <pointCloudCutoffMax>2.0</pointCloudCutoffMax>
            </plugin>
            <always_on>true</always_on>
            <update_rate>1.0</update_rate>
        </sensor>
    </gazebo>
    
    
    
    
   <gazebo reference="base_scan">
    <material>Gazebo/FlatBlack</material>
    <sensor type="ray" name="lds_lfcd_sensor">
      <pose>0 0 0 0 0 0</pose>
      <visualize>$(arg laser_visual)</visualize>
      <update_rate>5</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>360</samples>
            <resolution>1</resolution>
            <min_angle>0.0</min_angle>
            <max_angle>6.28319</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.120</min>
          <max>3.5</max>
          <resolution>0.015</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin name="gazebo_ros_lds_lfcd_controller" filename="libgazebo_ros_laser.so">
        <topicName>scan</topicName>
        <frameName>base_scan</frameName>
      </plugin>
    </sensor>
  </gazebo>
  
  
  
  
  <param name="tf_prefix" value="$(arg multi_robot_name)"/>
